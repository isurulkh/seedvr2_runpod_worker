# RunPod Serverless Worker Dockerfile for SeedVR
FROM nvidia/cuda:12.1.0-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3.9-dev \
    python3-pip \
    git \
    wget \
    curl \
    ffmpeg \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for python
RUN ln -sf /usr/bin/python3.9 /usr/bin/python
RUN ln -sf /usr/bin/pip3 /usr/bin/pip

# Upgrade pip
RUN pip install --upgrade pip setuptools wheel

# Install PyTorch with CUDA support
RUN pip install torch==2.1.0 torchvision==0.16.0 torchaudio==2.1.0 --index-url https://download.pytorch.org/whl/cu121

# Install flash attention
RUN pip install flash-attn==2.5.8 --no-build-isolation

# Install RunPod SDK
RUN pip install runpod

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install -r requirements.txt

# Install additional dependencies for inference
RUN pip install \
    accelerate \
    transformers \
    diffusers \
    xformers \
    opencv-python \
    imageio \
    imageio-ffmpeg \
    decord \
    av

# Install NVIDIA Apex for mixed precision training (CUDA 12.1 compatible)
RUN git clone https://github.com/NVIDIA/apex.git && \
    cd apex && \
    pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings "--build-option=--cpp_ext" --config-settings "--build-option=--cuda_ext" ./ && \
    cd .. && rm -rf apex

# Copy project files
COPY . .

# Create necessary directories
RUN mkdir -p ckpts results logs

# Download color fix script
RUN wget -O color_fix.py https://raw.githubusercontent.com/Dao-AILab/flash-attention/main/training/src/datamodules/language_modeling.py || echo "Color fix script download failed, continuing..."

# Copy and make model download script executable
COPY download_models.sh .
RUN chmod +x download_models.sh

# Set default environment variables for RunPod
ENV MODEL_SIZE=7b
ENV SP_SIZE=1
ENV RUNPOD_WORKER_ID="seedvr-worker"
ENV RUNPOD_ENDPOINT_ID="seedvr-endpoint"

# Download models during build (optional - can be done at runtime)
# RUN ./download_models.sh

# Set the handler as the entry point
CMD ["python", "-u", "runpod_handler.py"]